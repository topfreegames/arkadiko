// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/topfreegames/arkadiko/lib (interfaces: ArkadikoInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	lib "github.com/topfreegames/arkadiko/lib"
	reflect "reflect"
)

// MockArkadikoInterface is a mock of ArkadikoInterface interface
type MockArkadikoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockArkadikoInterfaceMockRecorder
}

// MockArkadikoInterfaceMockRecorder is the mock recorder for MockArkadikoInterface
type MockArkadikoInterfaceMockRecorder struct {
	mock *MockArkadikoInterface
}

// NewMockArkadikoInterface creates a new mock instance
func NewMockArkadikoInterface(ctrl *gomock.Controller) *MockArkadikoInterface {
	mock := &MockArkadikoInterface{ctrl: ctrl}
	mock.recorder = &MockArkadikoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockArkadikoInterface) EXPECT() *MockArkadikoInterfaceMockRecorder {
	return m.recorder
}

// SendMQTT mocks base method
func (m *MockArkadikoInterface) SendMQTT(arg0 context.Context, arg1 string, arg2 interface{}, arg3 bool) (*lib.SendMQTTResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMQTT", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*lib.SendMQTTResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendMQTT indicates an expected call of SendMQTT
func (mr *MockArkadikoInterfaceMockRecorder) SendMQTT(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMQTT", reflect.TypeOf((*MockArkadikoInterface)(nil).SendMQTT), arg0, arg1, arg2, arg3)
}
